commit fbdf51273
Author: Pierre Guillou <pierre.guillou@lip6.fr>
Date:   Tue Jul 20 12:54:47 2021 +0200

    [PersistenceDiagramDistanceMatrix] Fix distance computation?

diff --git a/core/base/persistenceDiagramDistanceMatrix/PersistenceDiagramDistanceMatrix.cpp b/core/base/persistenceDiagramDistanceMatrix/PersistenceDiagramDistanceMatrix.cpp
index 24103e5bf..2b0b96255 100644
--- a/core/base/persistenceDiagramDistanceMatrix/PersistenceDiagramDistanceMatrix.cpp
+++ b/core/base/persistenceDiagramDistanceMatrix/PersistenceDiagramDistanceMatrix.cpp
@@ -153,7 +153,8 @@ double PersistenceDiagramDistanceMatrix::getMostPersistent(
 }
 
 template <typename T>
-double PersistenceDiagramDistanceMatrix::computeDistance(const T &D1,
+double
+  PersistenceDiagramDistanceMatrix::computePowerDistance(const T &D1,
                                                          const T &D2) const {
 
   GoodDiagram D2_bis{};
@@ -199,19 +200,19 @@ void PersistenceDiagramDistanceMatrix::getDiagramsDistMat(
       if(this->do_min_) {
         auto &dimin = diags_min[a];
         auto &djmin = diags_min[b];
-        distance += computeDistance(dimin, djmin);
+        distance += computePowerDistance(dimin, djmin);
       }
       if(this->do_sad_) {
         auto &disad = diags_sad[a];
         auto &djsad = diags_sad[b];
-        distance += computeDistance(disad, djsad);
+        distance += computePowerDistance(disad, djsad);
       }
       if(this->do_max_) {
         auto &dimax = diags_max[a];
         auto &djmax = diags_max[b];
-        distance += computeDistance(dimax, djmax);
+        distance += computePowerDistance(dimax, djmax);
       }
-      return distance;
+      return Geometry::pow(distance, 1.0 / this->Wasserstein);
     };
 
     if(nInputs[1] == 0) {
diff --git a/core/base/persistenceDiagramDistanceMatrix/PersistenceDiagramDistanceMatrix.h b/core/base/persistenceDiagramDistanceMatrix/PersistenceDiagramDistanceMatrix.h
index 52d4fa8d6..227408cde 100644
--- a/core/base/persistenceDiagramDistanceMatrix/PersistenceDiagramDistanceMatrix.h
+++ b/core/base/persistenceDiagramDistanceMatrix/PersistenceDiagramDistanceMatrix.h
@@ -74,7 +74,7 @@ namespace ttk {
     template <typename T>
     double getMostPersistent(const std::vector<T> &bidder_diags) const;
     template <typename T>
-    double computeDistance(const T &D1, const T &D2) const;
+    double computePowerDistance(const T &D1, const T &D2) const;
     template <typename T>
     void getDiagramsDistMat(const std::array<size_t, 2> &nInputs,
                             std::vector<std::vector<double>> &distanceMatrix,
